"use strict";module.exports=function(s){var e=require("./package.json");require("time-grunt")(s),require("jit-grunt")(s,{useminPrepare:"grunt-usemin"});var t={app:"app",dist:"dist"};s.initConfig({config:t,watch:{bower:{files:["bower.json"],tasks:["wiredep"]},babel:{files:["<%= config.app %>/scripts/{,*/}*.js"],tasks:["babel:dist"]},babelTest:{files:["test/spec/{,*/}*.js"],tasks:["babel:test","test:watch"]},gruntfile:{files:["Gruntfile.js"]},sass:{files:["<%= config.app %>/styles/{,*/}*.{scss,sass}"],tasks:["sass:server","postcss"]},styles:{files:["<%= config.app %>/styles/{,*/}*.css"],tasks:["newer:copy:styles","postcss"]}},browserSync:{options:{notify:!1,background:!0},livereload:{options:{files:["<%= config.app %>/{,*/}*.html",".tmp/styles/{,*/}*.css","<%= config.app %>/images/{,*/}*",".tmp/scripts/{,*/}*.js"],port:9e3,server:{baseDir:[".tmp",t.app],routes:{"/bower_components":"./bower_components"}}}},test:{options:{port:9001,open:!1,logLevel:"silent",host:"localhost",server:{baseDir:[".tmp","./test",t.app],routes:{"/bower_components":"./bower_components"}}}},dist:{options:{background:!1,server:"<%= config.dist %>"}}},clean:{dist:{files:[{dot:!0,src:[".tmp","<%= config.dist %>/*","!<%= config.dist %>/.git*"]}]},server:".tmp"},eslint:{target:["Gruntfile.js","<%= config.app %>/scripts/{,*/}*.js","!<%= config.app %>/scripts/vendor/*","test/spec/{,*/}*.js"]},mocha:{all:{options:{run:!0,urls:["http://<%= browserSync.test.options.host %>:<%= browserSync.test.options.port %>/index.html"]}}},babel:{options:{sourceMap:!0},dist:{files:[{expand:!0,cwd:"<%= config.app %>/scripts",src:"{,*/}*.js",dest:".tmp/scripts",ext:".js"}]},test:{files:[{expand:!0,cwd:"test/spec",src:"{,*/}*.js",dest:".tmp/spec",ext:".js"}]}},sass:{options:{sourceMap:!0,sourceMapEmbed:!0,sourceMapContents:!0,includePaths:["."]},dist:{files:[{expand:!0,cwd:"<%= config.app %>/styles",src:["*.{scss,sass}"],dest:".tmp/styles",ext:".css"}]},server:{files:[{expand:!0,cwd:"<%= config.app %>/styles",src:["*.{scss,sass}"],dest:".tmp/styles",ext:".css"}]}},postcss:{options:{map:!0,processors:[require("autoprefixer-core")({browsers:["> 1%","last 2 versions","Firefox ESR","Opera 12.1"]})]},dist:{files:[{expand:!0,cwd:".tmp/styles/",src:"{,*/}*.css",dest:".tmp/styles/"}]}},wiredep:{app:{src:["<%= config.app %>/index.html"],exclude:["bootstrap.js"],ignorePath:/^(\.\.\/)*\.\./},sass:{src:["<%= config.app %>/styles/{,*/}*.{scss,sass}"],ignorePath:/^(\.\.\/)+/}},filerev:{dist:{src:["<%= config.dist %>/scripts/{,*/}*.js","<%= config.dist %>/styles/{,*/}*.css","<%= config.dist %>/images/{,*/}*.*","<%= config.dist %>/styles/fonts/{,*/}*.*","<%= config.dist %>/*.{ico,png}"]}},useminPrepare:{options:{dest:"<%= config.dist %>"},html:"<%= config.app %>/index.html"},usemin:{options:{assetsDirs:["<%= config.dist %>","<%= config.dist %>/images","<%= config.dist %>/styles"]},html:["<%= config.dist %>/{,*/}*.html"],css:["<%= config.dist %>/styles/{,*/}*.css"]},imagemin:{dist:{files:[{expand:!0,cwd:"<%= config.app %>/images",src:"{,*/}*.{gif,jpeg,jpg,png}",dest:"<%= config.dist %>/images"}]}},svgmin:{dist:{files:[{expand:!0,cwd:"<%= config.app %>/images",src:"{,*/}*.svg",dest:"<%= config.dist %>/images"}]}},htmlmin:{dist:{options:{collapseBooleanAttributes:!0,collapseWhitespace:!0,conservativeCollapse:!0,removeAttributeQuotes:!0,removeCommentsFromCDATA:!0,removeEmptyAttributes:!0,removeOptionalTags:!0,removeRedundantAttributes:!1,useShortDoctype:!0},files:[{expand:!0,cwd:"<%= config.dist %>",src:"{,*/}*.html",dest:"<%= config.dist %>"}]}},copy:{dist:{files:[{expand:!0,dot:!0,cwd:"<%= config.app %>",dest:"<%= config.dist %>",src:["*.{ico,png,txt}","images/{,*/}*.webp","{,*/}*.html","styles/fonts/{,*/}*.*"]},{expand:!0,dot:!0,cwd:".",src:"bower_components/bootstrap-sass/assets/fonts/bootstrap/*",dest:"<%= config.dist %>"}]}},modernizr:{dist:{devFile:"bower_components/modernizr/modernizr.js",outputFile:"<%= config.dist %>/scripts/vendor/modernizr.js",files:{src:["<%= config.dist %>/scripts/{,*/}*.js","<%= config.dist %>/styles/{,*/}*.css","!<%= config.dist %>/scripts/vendor/*"]},uglify:!0}},concurrent:{server:["babel:dist","sass:server"],test:["babel"],dist:["babel","sass","imagemin","svgmin"]},buildcontrol:{options:{dir:"dist",commit:!0,push:!0,message:"Built %sourceName% from commit %sourceCommit% on branch %sourceBranch%"},pages:{options:{remote:"git@github.com:GrayM/gokkai.git",branch:"gh-pages"}},heroku:{options:{remote:"git@heroku.com:example-heroku-webapp-1988.git",branch:"master",tag:e.version}},local:{options:{remote:"../",branch:"build"}}}}),s.registerTask("serve","start the server and preview your app",function(e){return"dist"===e?s.task.run(["build","browserSync:dist"]):void s.task.run(["clean:server","wiredep","concurrent:server","postcss","browserSync:livereload","watch"])}),s.registerTask("server",function(e){s.log.warn("The `server` task has been deprecated. Use `grunt serve` to start a server."),s.task.run([e?"serve:"+e:"serve"])}),s.registerTask("test",function(e){"watch"!==e&&s.task.run(["clean:server","concurrent:test","postcss"]),s.task.run(["browserSync:test","mocha"])}),s.registerTask("build",["clean:dist","wiredep","useminPrepare","concurrent:dist","postcss","concat","cssmin","uglify","copy:dist","modernizr","filerev","usemin","htmlmin"]),s.registerTask("default",["newer:eslint","test","build"])};